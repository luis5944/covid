{"version":3,"sources":["components/Cards/Cards.module.css","components/NavBar/NavBar.js","components/Cards/Cards.js","api/fetchAPI.js","components/CountryPicker/CountryPicker.js","components/Chart/Chart.js","App.js","components/Info/Info.js","router/AppRouter.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/covid.png"],"names":["module","exports","NavBar","className","to","activeClassName","exact","Cards","data","confirmed","recovered","deaths","lastUpdate","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchNews","a","axios","get","articles","fetchData","country","changeableUrl","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setfetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","setState","getData","src","covid","image","alt","Info","news","setNews","console","log","n","href","rel","align","description","AppRouter","path","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1be1df2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2sAuy\",\"card\":\"Cards_card__1a4sc\",\"infected\":\"Cards_infected__3Po9F\",\"recovered\":\"Cards_recovered__GoIf_\",\"deaths\":\"Cards_deaths__3Fz80\"};","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Inicio\r\n      </Link>\r\n\r\n      <div className=\"navbar-collapse\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            className=\"nav-item nav-link\"\r\n            exact\r\n            to=\"/info\"\r\n          >\r\n            Noticias\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nexport const Cards = ({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n}) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent >\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infectados\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\".\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Número de casos activos de COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recuperados\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\".\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Número de casos recuperados de COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Muertes\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\".\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Número de muertes por COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst ulrNews =\r\n  \"http://newsapi.org/v2/everything?language=es&q=coronavirus&from=2020-08-10&sortBy=publishedAt&apiKey=8d461b4b16534642b955473385154874\";\r\nexport const fetchNews = async () => {\r\n  const {data:{articles}} = await axios.get(ulrNews);\r\n  return articles;\r\n};\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => {\r\n      return {\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n      };\r\n    });\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api/fetchAPI\";\r\n\r\nexport const CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setfetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setfetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setfetchedCountries]);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => {\r\n            handleCountryChange(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/fetchAPI\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nexport const Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const dailyData = await fetchDailyData();\r\n      setDailyData(dailyData);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infectados\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Muertes\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infectados\", \"Recuperados\", \"Muertos\"],\r\n        datasets: [\r\n          {\r\n            label: \"Gente\",\r\n            backgroundColor: [\"orange\", \"green\", \"red\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Estado actual en ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Cards } from \"./components/Cards/Cards\";\r\nimport { CountryPicker } from \"./components/CountryPicker/CountryPicker\";\r\nimport { Chart } from \"./components/Chart/Chart\";\r\n\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/fetchAPI\";\r\n\r\nimport covid from \"./images/covid.png\";\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState({\r\n    data: {},\r\n    country: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetchData();\r\n      setState({ data, country: \"\" });\r\n    };\r\n    getData();\r\n  }, [setState]);\r\n\r\n  const handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n    setState({ data, country });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        src={covid}\r\n        className={styles.image}\r\n        \r\n        alt=\"covid\"\r\n      />\r\n      <Cards data={state.data} />\r\n      <CountryPicker handleCountryChange={handleCountryChange} />\r\n      <Chart data={state.data} country={state.country} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchNews } from \"../../api/fetchAPI\";\r\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./Info.css\";\r\nexport const Info = () => {\r\n  const [news, setNews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = async () => {\r\n      const fetchData = await fetchNews();\r\n      setNews(fetchData);\r\n    };\r\n    data();\r\n  }, []);\r\n\r\n  console.log(news);\r\n\r\n  return (\r\n    <div>\r\n      {news.map((n, i) => {\r\n        return (\r\n          <div key={i} className=\"grid-container-info\">\r\n            <Grid item component={Card} xs={12} md={10}>\r\n              <a\r\n                href={n.url}\r\n                className=\"grid-a-info \"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom align=\"center\">\r\n                    NOTICIA\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{n.title}</Typography>\r\n                  <Typography variant=\"body2\" color=\"textPrimary\">\r\n                    {n.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </a>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { NavBar } from \"../components/NavBar/NavBar\";\r\nimport App from \"../App\";\r\nimport { Info } from \"../components/Info/Info\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/info\" component={Info} />\r\n          <Redirect push to=\"/\"/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <AppRouter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1QV06\",\"image\":\"App_image__lo5qO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1oKov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__ozOsO\"};","module.exports = __webpack_public_path__ + \"static/media/covid.a402cb44.png\";"],"sourceRoot":""}